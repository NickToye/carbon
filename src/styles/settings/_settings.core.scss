// Settings :: Core

// This core file sets up carbon css’ most important setup variables. They
// underpin a lot of how the framework functions and should be modified and
// preconfigured with caution.

// Baseline grid lines height.
// Every spacing metric should be based on this.

$carbon-global-baseline: 6px !default;
$carbon-rhythm-unit: 24px !default;

// How many grid lines should our spacing unit variants span?
// Each value should be an unitless integer.

$carbon-global-spacing-unit-factor-tiny: 1 !default; // 6px
$carbon-global-spacing-unit-factor-small: 2 !default; // 12px
$carbon-global-spacing-unit-factor: 4 !default; // 24px
$carbon-global-spacing-unit-factor-large: 8 !default; // 48px
$carbon-global-spacing-unit-factor-huge: 16 !default; // 96px

// Spacing values are determined based on your project’s global baseline grid.
// It is not recommended that you modify these following variables
// (it can break your vertical rhythm), but if you need to, you can.

$carbon-global-spacing-unit: $carbon-global-baseline *
  $carbon-global-spacing-unit-factor !default;
$carbon-global-spacing-unit-tiny: $carbon-global-baseline *
  $carbon-global-spacing-unit-factor-tiny !default;
$carbon-global-spacing-unit-small: $carbon-global-baseline *
  $carbon-global-spacing-unit-factor-small !default;
$carbon-global-spacing-unit-large: $carbon-global-baseline *
  $carbon-global-spacing-unit-factor-large !default;
$carbon-global-spacing-unit-huge: $carbon-global-baseline *
  $carbon-global-spacing-unit-factor-huge !default;

// Base typographical styles.

$carbon-global-font-size: 16px !default;
$carbon-global-line-height: $carbon-global-spacing-unit !default;

// By default, carboncss uses fractions-like classes like `<div class="u-1/4">`.
// You can change the `/` to whatever you fancy with this variable.
$carbon-widths-delimiter: \/ !default;

// When using Sass-MQ, this defines the separator for the breakpoints suffix
// in the class name. By default, we are generating the responsive suffixes
// for the classes with a `@` symbol so you get classes like:
// <div class="u-3/12@mobile">
$carbon-widths-breakpoint-separator: \@ !default;

// Check that the chosen font rules are pixel numbers.

@each $_carbon-font-globals in $carbon-global-font-size $carbon-global-line-height
{
  @if (type-of($_carbon-font-globals) == number) {
    @if (unit($_carbon-font-globals) != 'px') {
      @error '`#{$_carbon-font-globals}` needs to be a pixel value.';
    }
  } @else {
    @error '`#{$_carbon-font-globals}` needs to be a number.';
  }
}

// Check that the chosen size factors are unitless, integer numbers.

@each $_carbon-spacing-unit
  in $carbon-global-spacing-unit-factor-tiny
  $carbon-global-spacing-unit-factor-small
  $carbon-global-spacing-unit-factor-large
  $carbon-global-spacing-unit-factor-huge
{
  @if (type-of($_carbon-spacing-unit) == number) {
    @if (unitless($_carbon-spacing-unit) == false) {
      @error '`#{$_carbon-spacing-unit}` needs to be unitless.';
    }

    @if ($_carbon-spacing-unit != ceil($_carbon-spacing-unit)) {
      @error '`#{$_carbon-spacing-unit}` needs to be an integer.';
    }
  } @else {
    @error '`#{$_carbon-spacing-unit}` needs to be a number.';
  }
}
